---

export interface Props {
  projects: {
    name: string,
    description: string,
    images: {
      src: string,
      alt: string,
      extraStyles?: string
    }[]
  }[]
}

const { projects } = Astro.props;
---

<div class='relative w-full h-full rounded'>
  {projects.map(project => (
    <div class='w-full h-full bg-transparent border-2 border-black md:border-0 md:bg-black mySlides fade rounded'>
      <div id='scroll-alert' class='absolute right-0 flex-col items-center hidden text-2xl text-black md:flex -top-20 animate-bounce'>
        <small class='text-lg font-helveticaNowText'>Role a imagem para ver detalhes</small>
        <button class="rotate-90">&#x2794;</button>
      </div> 
      <section id='scroll-projects' class='grid w-full h-full overflow-x-hidden overflow-y-scroll rounded-xl pb-9 place-items-center scrollbar-none'>
        {project.images.map(image => (
          <img class={'select-none rounded h-full ' + image.extraStyles} src={image.src} alt={image.alt} />
        ))}
      </section>
      <div class='hidden absolute w-[80%] h-[13rem] xl:h-[12rem] sm:flex flex-col justify-center rounded-[2.8rem] -bottom-10 -right-2 xl:-right-10 bg-[#e2e0d6] p-4 border-b-2 border-r-2 border-black'>
        <span class="font-matterSemiBold text-[1rem] sm:text-2xl text-black"><span class="mr-2 text-brand">|</span>{project.name}</span>
        <p class='leading-7 font-helveticaNowTextMedium text-zinc-900 md:font-helveticaNowText text-[1rem] sm:text-[1rem] sm:leading-5 md:text-[18px] md:leading-6'>{project.description}</p>
      </div>
      <div class="absolute flex flex-col -bottom-14 bg-[#e2e0d6] mx-2 p-2 rounded-xl sm:hidden">
        <h3 class="text-xl font-matterSemiBold md:text"><span class="mr-2 text-brand">|</span>{project.name}</h3> 
        <span class="text-[0.85rem] lg:text-xl font-helveticaNowText">{project.description}</span>
      </div>
    </div>
  ))}

  <div class='text-xl font-bold text-white select-none md:text-4xl xl:text-black'>
    <button id='prev' class='hover:border-2 hover:border-black bg-black xl:bg-transparent rounded-xl w-min absolute top-1/2 xl:-left-20 cursor-pointer mt-[-22px] p-4 transition duration-500 ease-in'>&#10094;</button>
    <button id='next' class='hover:border-2 hover:border-black bg-black xl:bg-transparent rounded-xl w-min absolute top-1/2 right-0 xl:-right-20 cursor-pointer mt-[-22px] p-4 transition duration-500 ease-in'>&#10095;</button>
  </div>
</div>

<script>
  (document.getElementById('prev') as HTMLButtonElement).addEventListener('click', () => plusSlides(-1));
  (document.getElementById('next') as HTMLButtonElement).addEventListener('click', () => plusSlides(1));

  let slideIndex = 1;
  showSlides(slideIndex);

  function plusSlides(n: number) {
    showSlides(slideIndex += n);
  }

  function showSlides(n: number) {
    let i;
    let slides = document.getElementsByClassName('mySlides');
    if (n > slides.length) {slideIndex = 1}
    if (n < 1) {slideIndex = slides.length}
    for (i = 0; i < slides.length; i++) {
      (slides[i] as HTMLElement).style.display = 'none';
    }
    (slides[slideIndex-1] as HTMLElement).style.display = 'block';
  }
</script>